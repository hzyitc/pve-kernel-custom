name: Auto release
on: 
  workflow_dispatch:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Free disk
        run: |
          echo "::group::Show disk usage"
          sudo df -h
          echo "::endgroup::"

          echo "::group::Uninstall packages"
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'php.*' azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove --purge -y
          sudo apt-get clean
          echo "::endgroup::"

          echo "::group::Show disk usage"
          sudo df -h
          echo "::endgroup::"

          echo "::group::Delete .net, android and ghc"
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "::endgroup::"

          echo "::group::Show disk usage"
          sudo df -h
          echo "::endgroup::"

      - name: Initialization environment
        run: |
          # sudo curl -L -o /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg http://download.proxmox.com/debian/proxmox-release-bullseye.gpg
          # sudo chmod +r /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg
          # sudo chmod a+w /etc/apt/sources.list
          # sudo echo "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription" >>/etc/apt/sources.list

          sudo apt-get update
          sudo apt-get install devscripts debhelper equivs git dwarves
          sudo apt-get autoremove --purge
          sudo apt-get clean

      - name: Checkout
        uses: actions/checkout@v2
        with:
            submodules: recursive
            path: pve-edge-kernel

      - name: Build
        run: |
          cd pve-edge-kernel
          debian/rules debian/control

          echo "::group::Install build-depends"
          sudo mk-build-deps -i
          echo "::endgroup::"

          echo "::group::Build"
          debuild --jobs=auto -b -uc -us
          echo "::endgroup::"

      - name: Show disk usage
        run: |
          sudo df -h

      - name: Upload artifacts
        uses: actions/upload-artifact@v2-preview
        with:
          path: "*.deb"

      - name: Release
        run: |
          cd pve-edge-kernel
          time="${{ github.event.head_commit.timestamp }}"
          sha="${GITHUB_SHA:0:8}"
          tag="ci-$(date +'%Y%m%d-%H%M' -d "$time")"
          message="Auto-Release $(date +'%Y-%m-%d %H:%M' -d "$time")"
          hub release create $(for a in ../*.deb; do echo -a $a; done) -t "$GITHUB_SHA" "$tag" -m "$message"
        env:
          GITHUB_TOKEN: ${{ github.token }}
